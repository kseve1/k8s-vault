apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: team-blue
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8200
      targetPort: 8200
  selector:
    app: vault

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config-map
  namespace: team-blue
data:
  vault.hcl: |
    storage "file" {
      path = "/mnt/vault/data"
    }

    disable_mlock = true

    listener "tcp" {
      address = "0.0.0.0:8200"
      tls_disable = true
    }
  run-server.sh: |
    #!/bin/sh
    sleep 20
    export VAULT_ADDR=http://vault.team-blue:8200
    vault operator init -key-shares 1 -key-threshold 1  > /tmp/vault-keys/vault.txt
    UNSEAL_KEY=`cat /tmp/vault-keys/vault.txt | grep "Unseal Key" | awk '{print $NF}'`
    ROOT_TOKEN=`cat /tmp/vault-keys/vault.txt | grep "Initial Root Token" | awk '{print $NF}'`
    vault operator unseal ${UNSEAL_KEY}
    export VAULT_TOKEN=${ROOT_TOKEN}
    echo $UNSEAL_KEY > /tmp/vault-keys/unseal-keys.txt
    echo $ROOT_TOKEN > /tmp/vault-keys/root-keys.txt
    vault secrets enable ssh
    vault write ssh/config/ca generate_signing_key=true
    vault write ssh/roles/default -<<"EOH"
    {
      "allow_user_certificates": true,
      "allowed_users": "*",
      "default_extensions": [
        {
          "permit-pty": ""
        }
      ],
      "key_type": "ca",
      "default_user": "ec2-user",
      "ttl": "30m0s"
    }
    EOH
    sleep 3600


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
  namespace: team-blue
spec:
  selector:
    matchLabels:
      app: vault
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: vault
    spec:
      nodeSelector:
        failure-domain.beta.kubernetes.io/zone: eu-central-1b
      containers:
        - image: vault:latest
          name: vault
          ports:
            - containerPort: 8200
              name: vaultport
          command: ["/bin/sh"]
          args: ["-c", "vault server -config /tmp/vault/vault.hcl"]
          volumeMounts:
            - name: vault-persistent-storage
              mountPath: /tmp/vault-keys/
            - name: vault-config-map-volume
              mountPath: /tmp/vault/

        - image: vault:latest
          name: vaultinit
          ports:
            - containerPort: 8200
              name: vaultport
          command: ["/bin/sh"]
          args:
            [
              "-c",
              "sh /tmp/vault/run-server.sh",
            ]
          volumeMounts:
            - name: vault-persistent-storage
              mountPath: /tmp/vault-keys/
            - name: vault-config-map-volume
              mountPath: /tmp/vault/
      volumes:
        - name: vault-persistent-storage
          hostPath:
            path: /tmp/
            type: Directory
        - name: vault-config-map-volume
          configMap:
            name: vault-config-map